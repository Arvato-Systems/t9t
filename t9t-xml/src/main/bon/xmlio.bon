/*
 * Copyright (c) 2012 - 2020 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import api.media.*
import t9t.base.types.*
import t9t.auth.*

/**
 * Package which contains the definitions of t9t XML interfaces.
 */
package (com.arvatosystems) t9t.xml XML PROPERTY bundle t9t.config {
    default private unsigned trim noControlChars;
    properties path;

    // general ISO types
    type countryCode            is Uppercase(2..2);             // ISO 3166
    type currencyCode           is Uppercase(3..3);             // ISO 4217
    type languageCode           is Ascii(2..5);                 // 2 lowercase plus optional _ + 2 uppercase

    // basic types
    type shortId                is Ascii(16);                   // internal identifiers, normally ASCII
    type longId                 is Unicode(20);                 // external identifiers, could hold the string representation of a UUID. Normally ASCII
    type externalId             is Unicode(36);                 // external identifiers, could hold the string representation of a UUID. Normally ASCII
    type shortText              is Unicode(80);                 // name or description

    type fxRate                 is Decimal(18,9);               // FX conversion rate
    type percentage             is Decimal(9,6);                // fixed point integral value
    type amount                 is signed   Decimal(18,6);      // monetary amount, always stored as micros
    type quantity               is signed   Decimal(18,6);      // any stock or order item related quantity
    type quantityAbs            is unsigned Decimal(18,6);      // any stock or order item related quantity
    type dimensionSpec          is Decimal(18,6);               // weight, length, width, height

    /** request a reply. */
    final class Ping xmlRoot {
        properties path = "ping";
        optional Integer                                pingId;                 // some optional number to return in objectRef
    }

    /** Common response header for all error messages, and some requests except authentication. */
    final class GenericResult xmlRoot {
        required Long                                   processRef;             // reference to execution entry
        required int                                    returnCode;             // execution response code, < 2,000,000,000 for technically correctly processed responses
        optional Unicode(512)                           errorDetails;           // a data parameter which allows to localize the error condition (offending field / parameter name etc.)
        optional Unicode(512)                           errorMessage;           // optional lookup of the returnCode as a standard text message, as defined in FortytwoException and derived classes. Only for convenience, may be translated to the requester's language.
        optional Long                                   objectRef;              // technical ID
        optional externalId                             objectId;               // obect identifier
        optional Integer                                count;                  // integral numeric result
        optional amount                                 amount;                 // monetary amount
        optional quantity                               quantity;               // quantity
        optional Uuid                                   id;                     // UUID
        optional shortText                              description;            // description
    }

    /** User I/O record. For security reasons, fields of the PermissionsDTO components cannot be imported. */
    final class User001 {
        required userId                             userId;              // User id to be used for login
        required shortText                          name;                // Christian name, surname, or description
        optional emailAddress                       emailAddress;        // email address of user, if known
        optional Boolean                            isActive;            // defaults to true
        optional roleId                             roleId;              // reference a role if that is the only allowed role for this user
        optional Boolean                            isTechnical;         // defaults to false
        optional shortText                          office;              // address
        optional shortText                          department;          // department
        optional shortText                          jobTitle;            // for signature of emails
        optional shortText                          phoneNo;             // phone no (landline)
        optional shortText                          mobilePhoneNo;       // phone no (mobile)
        optional Boolean                            externalAuth;        // set to true for LDAP or other external authentication source
        optional userId                             supervisorId;        // User ID of the supervisor (optional)
        optional Json                               z;                   // for custom extensions
    }

    /** IMPORT/EXPORT API: User master data. */
    final class UserMaster xmlRoot {
        required (User001) required List<>          records;
    }
}
