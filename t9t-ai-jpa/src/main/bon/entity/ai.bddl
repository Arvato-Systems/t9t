/*
 * Copyright (c) 2012 - 2023 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import t9t.setups.*
import t9t.base.types.*
import t9t.base.jpa.entities.*
import t9t.core.jpa.entities.*
import t9t.base.entities.*
import t9t.ai.*

package (com.arvatosystems) t9t.ai.jpa.entities owner fortytwo prefix p28 {

    entity AiModuleCfgEntity is AiModuleCfgDTO inherits ModuleConfigEntity {
        cacheable
    }

    entity AiChatLogEntity category datwo is AiChatLogDTO inheritance tablePerClass {
        tenantClass InternalTenantId
        pk (objectRef)
        index (conversationRef)
        @ManyToOne AiConversationEntity conversation LAZY for (conversationRef)
    }

    entity AiAssistantEntity category cfg is AiAssistantDTO inheritance tablePerClass {
        cacheable
        tenantClass InternalTenantId
        pk (objectRef)
        index unique (tenantId, assistantId)
    }

    entity AiUserStatusEntity category datv is AiUserStatusDTO inheritance tablePerClass {
        cacheable
        tenantClass InternalTenantId
        pk (objectRef)
        index unique (tenantId, userId)
        @ManyToOne AiAssistantEntity preferredAssistant EAGER for (preferredAssistantRef)
        @ManyToOne AiConversationEntity currentConversation LAZY for (currentConversationRef)
    }

    entity AiConversationEntity category datv is AiConversationDTO inheritance tablePerClass {
        forceSetters
        cacheable
        tenantClass InternalTenantId
        pk (objectRef)
        @ManyToOne AiAssistantEntity aiAssistant EAGER for (aiAssistantRef)
    }
}
