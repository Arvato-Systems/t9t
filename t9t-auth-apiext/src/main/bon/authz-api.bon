/*
 * Copyright (c) 2012 - 2018 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import api.*
import apiw.*
import api.auth.*
import api.media.*
import t9t.base.types.*
import t9t.base.api.*
import t9t.base.auth.*

/** External API - Authorization requests. */
package (com.arvatosystems) t9t.authz.api {
    default private unsigned trim noControlChars;
    properties noJava, simpleref,
        tenantCategory is com.arvatosystems.t9t.annotations.TenantCategory(),
        searchprefix is com.arvatosystems.t9t.annotations.SearchPrefix(),
        serialized is com.arvatosystems.t9t.annotations.StoreSerialized,
        noAutoMap is com.arvatosystems.t9t.annotations.NoAutoMap,
        notupdatable is com.arvatosystems.t9t.annotations.NotUpdatable,
        ref is com.arvatosystems.t9t.annotations.IsObjectRef;

    /** Query all permissions for the logged in user (for example for UI or report) */
    class QueryPermissionsRequest extends RequestParameters return QueryPermissionsResponse {
        required enum PermissionType                        permissionType;
    }

    class QueryPermissionsResponse extends ServiceResponse {
        required (PermissionEntry...) required List<>       permissions;
    }

    /** Query a single permission for the logged in user. */
    class QuerySinglePermissionRequest extends RequestParameters return QuerySinglePermissionResponse {
        required enum PermissionType                        permissionType;
        required resourceId                                 resourceId;     // the uniquely defined resource to check
    }

    class QuerySinglePermissionResponse extends ServiceResponse {
        required enumset Permissionset                      permissions;
    }
}
