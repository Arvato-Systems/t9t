/*
 * Copyright (c) 2012 - 2018 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.arvatosystems.t9t.out.be.impl.output.camel;

import javax.activation.DataHandler;
import javax.activation.FileDataSource;

import org.apache.camel.Endpoint;
import org.apache.camel.Exchange;
import org.apache.camel.Message;
import org.apache.camel.component.mail.MailEndpoint;

/**
 *
 * Transformer implementation for mail output. Sets the file referenced in the header 'fileName' as an attachment for the email.
 *
 */
public class MailOutTransformer implements ICamelOutMessageTransformer {

    @Override
    public Exchange transformMessage(Exchange exchange, Endpoint endpoint) {
        Message in = exchange.getIn();
        in.setBody("autogenerated mail providing the exported document");

        in.addAttachment(in.getHeader(Exchange.FILE_NAME, String.class), new DataHandler(new FileDataSource(in.getHeader("fileName", String.class))));

        //        MailEndpoint mailEndpoint = (MailEndpoint) endpoint;
        //        MailConfiguration mailConfiguration = mailEndpoint.getConfiguration();
        //        mailConfiguration.setUsername("username");
        //        mailConfiguration.setPassword("pw");
        //        mailEndpoint.setConfiguration(mailConfiguration);
        //        in.setHeader("To", "mail");
        //        in.setHeader("From", "mail");
        //        in.setHeader("Subject", "subject");

        return exchange;
    }

    @Override
    public Class<? extends Endpoint> forType() {
        return MailEndpoint.class;
    }



}
