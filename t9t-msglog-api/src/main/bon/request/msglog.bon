/*
 * Copyright (c) 2012 - 2022 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import api.*
import t9t.base.types.*
import t9t.base.api.*
import t9t.base.entities.*
import t9t.base.crud.*
import t9t.base.search.*
import t9t.msglog.*

package (com.arvatosystems) t9t.msglog.request {
    default private unsigned trim noControlChars;

    /**
     * The message search will filter by your own requests, unless ADMIN permissions have been granted for this request.
     * In addition, due to the sensitive nature of this request, the CUSTOM permission is required.
     */
    class MessageSearchRequest           extends SearchRequest<MessageDTO, NoTracking> {}
    class MessageStatisticsSearchRequest extends SearchRequest<MessageStatisticsDTO, t9t.base.entities.WriteTracking> {}

    /**
     * Retrieves request parameters.
     * Requires additional permissions: CUSTOM for general operation, in addition ADMIN retrieve request data of other users.
     */
    class RetrieveParametersRequest extends RequestParameters return RetrieveParametersResponse {
        required f42Ref                             processRef;
        required boolean                            requestParameters;
        required boolean                            serviceResponse;
    }

    class RetrieveParametersResponse extends ServiceResponse {
        optional (RequestParameters...)             requestParameters;
        optional (ServiceResponse...)               serviceResponse;
    }

    /**
     * Rerun a request.
     * Save variant: Rerun only if it has not been tried before, and if the previous return code was not OK.
     * Requires ADMIN and CUSTOM permission for this request.
     */
    class RerunRequest extends RequestParameters {
        required f42Ref                             processRef;
    }

    /**
     * Rerun a request.
     * Force variant: Rerun also if it has been tried before, and also if the previous return code was OK.
     * The rerun will not be recorded as a rerun and will appear as the "rerun" only in the process log.
     * It is executed in the same transaction as this rerun request.
     * The caller must however have the permissions also for the target request.
     * Also requires ADMIN and CUSTOM permission for this request.
     */
    class RerunUnconditionallyRequest extends RequestParameters {
        required f42Ref                             processRef;
    }

    /**
     * Aggregate data of MessageDTO into MessageStatisticsDTO.
     * Should be run by sessions of the global tenant only, aggregates data for all tenants.
     */
    class AggregateMessageStatisticsRequest extends RequestParameters {
        optional userId                             userId;                 // if null, aggregate for all users, else for the specified user
        optional Day                                ^day;                   // if null, aggregate data of yesterday, else for the specified day
        optional pqon                               requestParameterPqon;   // if null, aggregate data for this PQON only, else for all
    }

    /**
     * Request to clean the transaction log table.
     * Should be run by sessions of the global tenant only, deletes data for all tenants.
     *
     * The request either deletes all requests older than the specified age, or only the ones which performed without error,
     * keeping the error ones for further analysis.
     */
    class RemoveOldMessageEntriesRequest extends RequestParameters {
        required Integer                            keepMaxDaysAg;          // delete requests older than this age
        optional Boolean                            keepErrorRequests;      // if set to TRUE, do not delete entries which have a returnCode >= 200000000 (exception return codes)
    }
}
