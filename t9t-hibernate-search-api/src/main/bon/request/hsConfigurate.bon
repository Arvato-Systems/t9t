/*
 * Copyright (c) 2012 - 2025 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import meta.identifier
import t9t.base.types.*
import t9t.base.api.*
import t9t.base.event.*

package (com.arvatosystems) t9t.hs.configurate.request {

    class IndexCreationFromScratchRequest extends RequestParameters {
        required identifier                         entityName;
    }

    class IndexUpdateRequest extends RequestParameters {
        required identifier                         entityName;
    }

    class CheckIndexStatusRequest extends RequestParameters return CheckIndexStatusResponse {
        required identifier                         entityName;
    }

    class CheckIndexStatusResponse extends ServiceResponse {
        optional Unicode(1000)                      validationError;
    }

    // Create index for all configured entities
    class IndexCreationForEntitiesRequest extends RequestParameters {
    }

    // Update index for all configured entities
    class IndexUpdateForEntitiesRequest extends RequestParameters {
    }

    // Check index status for all configured entities
    class CheckIndexStatusForEntitiesRequest extends RequestParameters return CheckIndexStatusForEntitiesResponse {
    }

    class CheckIndexStatusForEntitiesResponse extends ServiceResponse {
        required (EntityIndexStatus...) required List<>     results;
    }

    class EntityIndexStatus {
        required identifier                                 entityName;
        optional Boolean                                    indexValid;
        optional Unicode(1000)                              errorMessage;
    }
}
