/*
 * Copyright (c) 2012 - 2018 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import api.*
import apiw.*
import api.media.*
import de.jpaw.bonaparte.api.*
import t9t.base.types.*
import t9t.base.entities.*
import t9t.base.output.*
import t9t.base.moduleCfg.*
import t9t.doc.api.*

/** Configuration data for document templates. All configuration is tenant specific, because this usually is customized a lot.
 * If a group of tenants is supposed to share a set of documents, then this can be solved by the standard shared tenant ID mapping.
 */
package (com.arvatosystems) t9t.email {
    default private unsigned trim noControlChars;
    properties inherited, qualifierFor,
        tenantCategory is com.arvatosystems.t9t.annotations.TenantCategory(),
        searchprefix is com.arvatosystems.t9t.annotations.SearchPrefix(),
        serialized is com.arvatosystems.t9t.annotations.StoreSerialized,
        noAutoMap is com.arvatosystems.t9t.annotations.NoAutoMap,
        notupdatable is com.arvatosystems.t9t.annotations.NotUpdatable,
        ref is com.arvatosystems.t9t.annotations.IsObjectRef;


    /** Extended tenant configuration for data exceeding the generic tenant configuration of the application server.
     * Records of this entity share the same artifical primary key tenantRef.
     */
    class EmailModuleCfgDTO RTTI 2001 extends ModuleConfigDTO {
        properties                                  tenantCategory="D";                                 // if entry missing, get the global one
        optional Ascii(8)                           implementation         default "SMTP" properties qualifierFor="email.services.IEmailSender"; // currently supported: SMTP, SES, VERTX
        optional Ascii(8)                           smtpServerTransport    default "smtp";              // default to "smtp"
        optional Unicode(100)                       smtpServerAddress;
        optional Integer                            smtpServerPort;
        optional Unicode(32)                        smtpServerUserId;
        optional Unicode(64)                        smtpServerPassword;
        optional Boolean                            smtpServerTls;
    }


    enum EmailStatus {
        SENT                = "",
        UNSENT              = "U",
        SENDING_IN_PROGRESS = "P",
        ERROR               = "E"
    }

    class EmailRef extends Ref {}

    class EmailDTO extends EmailRef {
        required uuid                               messageId;
        optional Unicode(255)                       emailSubject;                                       // subject line which may contain macros as ${} (subjectIsComponent = false) or names a component which defines the subject
        optional emailAddress                       emailFrom;
        optional emailAddress                       replyTo;
        required multipleEmailAddresses             emailTo;
        optional multipleEmailAddresses             emailCc;
        optional multipleEmailAddresses             emailBcc;
        required int                                numberOfAttachments;
        optional Enum EmailStatus                   emailStatus;
        optional Boolean                            bounced;
        optional Unicode(1000) allowControlChars    bounceMessage;
    }


    final class EmailAttachmentsKey extends CompositeKeyRef {
        required f42Ref                             emailRef;
        required Integer                            attachmentNo;       // 0 = email main text
    }

    class EmailAttachmentsDTO extends CompositeKeyBase {
        required f42Ref                             emailRef;
        required Integer                            attachmentNo;       // 0 = email main text
        required (MediaData)                        document;
    }
}
