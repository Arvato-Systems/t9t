/*
 * Copyright (c) 2012 - 2025 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import apiw.*
import api.auth.*
import t9t.base.api.*
import t9t.base.types.*

package (com.arvatosystems) t9t.changeRequest {
    properties serialized, compact2,
        dropdown is com.arvatosystems.t9t.annotations.UseDropDownInUI(),
        notupdatable is com.arvatosystems.t9t.annotations.NotUpdatable;

    /** Status transition for data change requests:

        WORK_IN_PROGRESS: Changes are not finalized yet. Initial status. This status can only be changed to following statuses.
            - TO_REVIEW -> Submit change for review. Status will change back to WORK_IN_PROGRESS if any further changes are done on this change request data.
            - CONFLICT  -> If another change request with similar PQON and key is activated while this change is in progress.

        TO_REVIEW: Changes are submitted for review. This status can only be changed to following statuses.
            - APPROVED -> Once changes are approved by the reviewer. Or can directly change to ACTIVATED if auto activation is enabled in configuration.
            - REJECTED -> If changes are rejected by the reviewer. User can modify the data in change request to change the status back to WORK_IN_PROGRESS.
            - CONFLICT -> If another change request with similar PQON and key is activated while this change is in review.

        APPROVED: Changes are approved and can be activated. This status can only be changed to following statuses.
            - ACTIVATED -> Once changes are activated by the user.
            - REJECTED  -> If changes are rejected by the reviewer. User can modify the data in change request to change the status back to WORK_IN_PROGRESS.
            - CONFLICT  -> If another change request with similar PQON and key is activated while this change is not activated yet.

        REJECTED: Changes are rejected. This status can only be changed to following statuses.
            - WORK_IN_PROGRESS -> If changes are modified after rejection.

        ACTIVATED: Changes are applied to live table. Final status, no more changes after this status.

        CONFLICT: Changes for the similar PQON and key is activated after this change is created but not yet activated or rejected. This status can only be changed to following statuses.
            - WORK_IN_PROGRESS -> If changes are modified after conflict.
    */
    enum ChangeWorkFlowStatus {
        WORK_IN_PROGRESS                 = "W",
        TO_REVIEW                        = "R",
        APPROVED                         = "A",
        REJECTED                         = "J",
        ACTIVATED                        = "V",
        CONFLICT                         = "C"
    }

    class DataChangeRequestRef extends Ref {}
    final class DataChangeRequestKey extends DataChangeRequestRef {
        required pqon                       pqon;
        required shortText                  changeId;
        optional Object                     key;
    }
    final class DataChangeRequestInternalKey extends DataChangeRequestRef {
        required pqon                       pqon;
        required shortText                  changeId;
        required byte[]                     key;
    }

    /** Used for approval workflow for data change requests (mainly config data). It will store the changes requested by the user and the status of the change*/
    class DataChangeRequestDTO extends DataChangeRequestRef {
        required pqon                               pqon properties notupdatable;               // data (table) class PQON for which the change is requested
        required t9tShortId                         changeId properties notupdatable;           // a unique identifier of the change
        optional Object                             key properties notupdatable, serialized, compact2, notNull; // primary key of the data object which is being changed
        required (RequestParameters...)             crudRequest properties serialized, compact2; // the actual CRUD request which will be used to apply the change
        required enum ChangeWorkFlowStatus          status;                                     // current status of the change work flow
        required userId                             userIdCreated properties dropdown="userId"; // user who initiated the change
        required instant                            whenCreated;                                // when the change was initiated
        required userId                             userIdModified properties dropdown="userId"; // user who last modified the change
        required instant                            whenLastModified;                           // when the change was last modified
        optional userId                             userIdSubmitted properties dropdown="userId"; // user who submitted the change for approval
        optional Instant                            whenSubmitted;                              // when the change was submitted for approval
        optional Unicode(255) allowControlChars     textSubmitted;                              // description of the changes, entered by the submitter
        optional userId                             userIdApprove properties dropdown="userId"; // user ID who has approved (or rejected) the approval
        optional Instant                            whenDecided;                                // when the decision was made (approval or rejection)
        optional Unicode(255) allowControlChars     textDecision;                               // additional explanation for the decision
        optional userId                             userIdActivated properties dropdown="userId"; // user ID who has activated (move the change to live table) the change
        optional Instant                            whenActivated;                              // when the change was activated
        optional Integer                            count;                                      // Only for special approvals: The number of items to be approved
        optional defaultExternalId                  parameter;                                  // Only for special approvals: Some descriptive parameter (for example a couponId)
    }

    class DataChangeRequestExtendedDTO {
        required (DataChangeRequestDTO)             change;
        required enumset Permissionset              permissions;
    }

    class ChangeWorkFlowConfigRef extends Ref {}
    final class ChangeWorkFlowConfigKey extends ChangeWorkFlowConfigRef {
        required pqon                       pqon;
    }

    /** Configure the PQON of table which need approval work flow for new changes. Also hold other config params need to maintain the approval workflow of that PQON data changes*/
    class ChangeWorkFlowConfigDTO extends ChangeWorkFlowConfigRef {
        required pqon                       pqon properties notupdatable, dropdown="cfgPQON";   // data (table) class PQON for which change work flow is needed
        required boolean                    approvalRequiredForCreate;                          // if true, approvals are required to create new records
        required boolean                    approvalRequiredForUpdate;                          // if true, approvals are required to update records
        required boolean                    approvalRequiredForDelete;                          // if true, approvals are required to delete records
        required boolean                    approvalRequiredForDeactivation;                    // If true, deactivations will be submitted for approval as "UPDATE" requests with the only change setting "isActive" to false.
        required boolean                    approvalRequiredForActivation;                      // If true, activations will be submitted for approval as "UPDATE" requests with the only change setting "isActive" to true.
        required boolean                    separateActivation;                                 // If true, activation must be manually triggered
        required boolean                    privateChangeIds;                                   // If true, then only the user who submitted a change can make further changes to it or resubmit it. Otherwise, everyone with change permissions can work on any pending change.
        required boolean                    enforceFourEyes;                                    // If true, then every change must be approved by a different user than the one who submitted it.
        optional Unicode(100)               screenLocation;                                     // location of UI screen to display and edit the changes
        optional Unicode(50)                viewModelId;                                        // mainly use to get key from data to search and display original data record
    }
}
