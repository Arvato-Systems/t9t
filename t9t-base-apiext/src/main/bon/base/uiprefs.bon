/*
 * Copyright (c) 2012 - 2018 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import meta.*               // identifier typedef
import ui.*                 // UI configuration stuff
import apiw.*
import t9t.base.types.*
import t9t.base.api.*
import t9t.base.output.*

package (com.arvatosystems) t9t.base.uiprefs {
    default private unsigned trim noControlChars;

    /** Configuration for the UI grid configuration. It will be stored in the generic configuration
     * table using the group UI-GRID (old model) or a specific table (new model).
     */
    class UIGridPreferences {
        required (UIColumnConfiguration) required List <> columns;          // list of all columns, with display related settings. The ordering in the list provides the ordering on screen.
        required boolean                            dynamicWidths;          // true: use dynamic grid column widths (by content), false: use configured fixed widths
        required boolean                            isSolrSearch;           // true if this search is SOLR based
        required boolean                            sortDescending;         // default is to sort ascending
        optional identifier                         sortColumn;             // if null, default sort order will be used, else sorting by this column
        optional identifier                         viewModel;              // key to the IViewModel - required to enrich the UI meta data
        required Unicode(255) Map<String>           classProperties;        // if viewModel is given, this field will store the class level properties of the bon file
        optional Boolean                            wasLean;                // determines if it was an v2 source or v3. null means v2
    }

    /** Reduced set of properties for a simple configuration.
     * It obtains some information from the search request (property isSolr for example).
     */
    class UILeanGridPreferences {
        required identifier                         viewModel;              // key to the IViewModel - required to enrich the UI meta data
        required (UIFilter) List<>                  filters;
        required identifier required List<>         fields;
        required signed Integer List<>              fieldWidths;            // if field widths are given, they must be provided for every selected field. signed due to use of -1
        optional identifier                         sortColumn;
        optional Boolean                            sortDescending;
        required identifier List<>                  unsortableFields;       // a list of identifiers specifying columns which cannot be sorted
    }
}
